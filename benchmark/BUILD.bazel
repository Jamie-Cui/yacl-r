# Copyright 2024 Ant Group Co., Ltd.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

load("//bazel:yacl.bzl", "yacl_cc_binary")

yacl_cc_binary(
    name = "bench_aes",
    srcs = ["bench_aes.cc"],
    deps = [
        "//yacl/crypto/aes:aes_intrinsics",
        "//yacl/crypto/aes:aes_opt",
        "//yacl/crypto/block_cipher:symmetric_crypto",
        "//yacl/crypto/rand",
        "@com_github_google_benchmark//:benchmark_main",
    ],
)

yacl_cc_binary(
    name = "bench_galois_field",
    srcs = ["bench_galois_field.cc"],
    deps = [
        "//yacl/crypto/rand",
        "//yacl/math/galois_field:gf",
        "@com_github_google_benchmark//:benchmark_main",
    ],
)

yacl_cc_binary(
    name = "bench_mpint_serialize",
    srcs = ["bench_mpint_serialize.cc"],
    deps = [
        "//yacl/crypto/rand",
        "//yacl/math/mpint",
        "@com_github_google_benchmark//:benchmark",
    ],
)

yacl_cc_binary(
    name = "bench_mpint",
    srcs = ["bench_mpint.cc"],
    deps = [
        "//yacl/crypto/rand",
        "//yacl/math/mpint",
        "@com_github_google_benchmark//:benchmark_main",
    ],
)

yacl_cc_binary(
    name = "bench_mpint_prime",
    srcs = ["bench_mpint_prime.cc"],
    deps = [
        "//yacl/crypto/rand",
        "//yacl/math/mpint",
        "@com_github_google_benchmark//:benchmark_main",
    ],
)

yacl_cc_binary(
    name = "bench_mpint_mod",
    srcs = ["bench_mpint_mod.cc"],
    deps = [
        "//yacl/crypto/rand",
        "//yacl/math/mpint",
        "@com_github_google_benchmark//:benchmark_main",
    ],
)

yacl_cc_binary(
    name = "bench_ecc",
    srcs = ["bench_ecc.cc"],
    deps = [
        "//yacl/crypto/ecc",
        "//yacl/crypto/rand",
        "@com_github_gflags_gflags//:gflags",
        "@com_github_google_benchmark//:benchmark",
        "@com_google_absl//absl/strings",
    ],
)
